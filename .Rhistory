return -1;
}
}')
signC(3)
signC(-2)
source('~/.active-rstudio-document', encoding = 'UTF-8')
library(Rcpp)
cppFunction('int signC(int x) {
if (x > 0) {
return 1;
} else if (x == 0) {
return 0;
} else {
return -1;
}
}')
signC(2)
signC(-1)
signC(0)
signC(-0)
library(igraph)
edge1 = c(A,B,A,C,B,D,C,D)
edge1 = c("A","B","A","C","B","D","C","D")
make_graph(edge1)
plot(graph1)
graph1 <- make_graph(edge1)
plot(graph1)
graph1 <- make_undirected_graph(edge1)
plot(graph1)
V(graph1)[A]
V(graph1)["A"]
V(graph1)$tax <- c("Blue",rep("Yellow",3)
)
graph1 <- set_color(graph1)
plot(graph1)
V(graph1)$tax <- c("Yellow",rep("Blue",3))
graph1 <- set_color(graph1)
plot(graph1)
E(graph1)$weight <- rep(1,4)
plot(graph1)
V(graph1)$tax <- c("Yellow",rep("Blue",3))
graph1 <- set_color(graph1)
E(graph1)$weight <- rep(1,4)
plot(graph1)
graph1 <- set_color(graph1)
E(graph1)$weight <- rep(1,4)
plot(graph1)
V(graph1)$tax <- c("Yellow",rep("Blue",3))
graph1 <- set_color(graph1)
E(graph1)$weight <- rep(1,4)
plot(graph1)
V(graph1)$tax <- c("Blue",rep("Yellow",3))
graph1 <- set_color(graph1)
E(graph1)$weight <- rep(1,4)
plot(graph1)
foo1 <- c("Blue",rep("Yellow",3))
names(foo1) <- c("A","B","C","D")
foo1
graph1 <- set_color(graph1,foo1)
E(graph1)$weight <- rep(1,4)
plot(graph1)
foo1 <- c("blue",rep("yellow",3))
names(foo1) <- c("A","B","C","D")
graph1 <- set_color(graph1,foo1)
E(graph1)$weight <- rep(1,4)
plot(graph1)
V(graph1)$tax <- c("Blue",rep("Yellow",3))
foo1 <- c("blue","yellow")
names(foo1) <- c("Blue","Yellow")
graph1 <- set_color(graph1,foo1)
E(graph1)$weight <- rep(1,4)
plot(graph1)
foo1 <- c("cornflowerblue","gold")
names(foo1) <- c("Blue","Yellow")
graph1 <- set_color(graph1,foo1)
E(graph1)$weight <- rep(1,4)
plot(graph1)
Netfrac(graph1,"transfer")
library(doParallel)
library(igraph)
library(SDDE)
library(ape)
library(tictoc)
library(netresponse)
library(Rcpp)
sourceCpp("kcombination.cpp")
source("R/dist_par4.R")
#source("R/dist_par3.r")
source("R/dist_tree_par.r")
source("R/set_node.r")
source("R/set_colors.r")
source("R/get_global_nb_motifs_by_colors2.r")
source("R/create_subgraph_by_colors.r")
source("R/unconnected_motifs3.r")
source("R/SSNUnifrac.R")
source("R/reconnect.r")
Netfrac(graph1,"transfer")
Netfrac(graph1)
Netfrac(graph1,"paths")
Netfrac(graph1,"path")
Netfrac(graph1,"pathe")
graph2 <- make_graph("franklin")
plot(graph2)
graph2 <- make_graph("bull")
plot(graph2)
graph2 <- make_graph("coxeter")
plot(graph2)
graph2 <- make_graph("chvatal")
plot(graph2)
graph2 <- make_graph("diamond")
plot(graph2)
graph2 <- make_graph("herschel")
plot(graph2)
V(graph2)$tax
V(graph2)
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/main.R')
graph <- erdos.renyi.game(21, 0.3, gnp,
directed = FALSE, loops = FALSE)
reseau  <- erdos.renyi.game(21, 0.3, gmp,
directed = FALSE, loops = FALSE)
reseau  <- erdos.renyi.game(21, 0.3, gnm,
directed = FALSE, loops = FALSE)
reseau  <- erdos.renyi.game(21, 0.3, gnm, directed = FALSE, loops = FALSE)
reseau  <- erdos.renyi.game(21, 0.3, "gnm", directed = FALSE, loops = FALSE)
plot(reseau)
reseau  <- erdos.renyi.game(21, 0.3, "gnp", directed = FALSE, loops = FALSE)
plot(reseau)
reseau  <- erdos.renyi.game(100, 0.5, "gnp", directed = FALSE, loops = FALSE)
plot(reseau)
reseau  <- erdos.renyi.game(100, 0.3, "gnp", directed = FALSE, loops = FALSE)
plot(reseau)
reseau  <- erdos.renyi.game(100, 0.1, "gnp", directed = FALSE, loops = FALSE)
plot(reseau)
#reseau  <- erdos.renyi.game(100, 0.1, "gnp", directed = FALSE, loops = FALSE)
V(reseau)
#reseau  <- erdos.renyi.game(100, 0.1, "gnp", directed = FALSE, loops = FALSE)
function (x){
return(list_tax)
}
#reseau  <- erdos.renyi.game(100, 0.1, "gnp", directed = FALSE, loops = FALSE)
tax_assign <- function (x){
return(list_tax)
}
#reseau  <- erdos.renyi.game(100, 0.1, "gnp", directed = FALSE, loops = FALSE)
tax_assign <- function (x){
list_tax = c(rep("A",x),rep("B",100-x)
return(list_tax)
}
V(reseau)$tax = rep
plot(reseau)
#reseau  <- erdos.renyi.game(100, 0.1, "gnp", directed = FALSE, loops = FALSE)
tax_assign <- function (x){
c(rep("A",x),rep("B",100-x))
}
tax_assign(10)
V(reseau)$tax = tax_assign(10)
V(reseau)$color = set_color(reseau)
plot(reseau)
V(reseau)$tax = tax_assign(10)
reseau = set_color(reseau)
plot(reseau)
V(reseau)$color
V(reseau)$color = ""
V(reseau)$color
reseau  <- erdos.renyi.game(100, 0.1, "gnp", directed = FALSE, loops = FALSE)
V(reseau)$tax = tax_assign(10)
reseau = set_color(reseau)
V(reseau)$color
plot(reseau)
Netfrac(reseau,"transfer")
E(reseau)$weight = rep(1,E(reseau))
E(reseau)$weight = rep(1,E(reseau))
E(reseau)$weight = rep(1,E(reseau))
E(reseau)$weight = c(rep(1,E(reseau)))
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
Netfrac(reseau,"transfer")
E(reseau)
for(i in 1:5){print(i)}
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
Netfrac(reseau,"transfer")
}
result_reseau = [1:10]
result_reseau = c(1:10)
result_reseau
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result_reseau[i] = Netfrac(reseau,"transfer")
}
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result_reseau[i] = Netfrac(reseau,"transfer")$transfer
result_reseau[i] = Netfrac(reseau,"transfer")$transfer2
}
result_reseau = c(rep(NULL,10))
results_conn50
print(result)
result_reseau = c(1:10)
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result = Netfrac(reseau,"transfer")
print(result)
}
reseau  <- erdos.renyi.game(100, 0.1, "gnp", directed = FALSE, loops = FALSE)
tax_assign <- function (x){
c(rep("A",x),rep("B",100-x))
}
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result = Netfrac(reseau,"transfer")
print(result)
}
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result = Netfrac(reseau,"transfer")
print(result)
write.csv(result, "result1.txt",TRUE)
}
for (k in 1:100){
reseau  <- erdos.renyi.game(100, 0.1, "gnp", directed = FALSE, loops = FALSE)
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result = Netfrac(reseau,"transfer")
print(result)
write.csv(result, "result1.txt",TRUE)
}
}
for (k in 1:100){
reseau  <- erdos.renyi.game(100, 0.2, "gnp", directed = FALSE, loops = FALSE)
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result = Netfrac(reseau,"transfer")
print(result)
write.csv(result, "result2.txt",TRUE)
}
}
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/main.R')
librart()
library(picante)
reseau  <- erdos.renyi.game(100, 0.02, "gnp", directed = FALSE, loops = FALSE)
for (k in 1:100){
reseau  <- erdos.renyi.game(100, 0.02, "gnp", directed = FALSE, loops = FALSE)
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result = Netfrac(reseau,"transfer")
print(result)
write.csv(result, "result3.txt",TRUE)
}
}
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/Test_aleatoire.R')
for (k in 1:100){
reseau  <- erdos.renyi.game(100, 0.04, "gnp", directed = FALSE, loops = FALSE)
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result = Netfrac(reseau,"transfer")
print(result)
write.csv(result, "result3.txt",TRUE)
}
}
for (k in 1:100){
reseau  <- erdos.renyi.game(100, 0.04, "gnp", directed = FALSE, loops = FALSE)
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result = Netfrac(reseau,"transfer")
print(result)
write.csv(result, "result3.txt",TRUE)
}
}
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/Test_aleatoire.R')
for (k in 1:100){
reseau  <- erdos.renyi.game(100, 210, "gnm", directed = FALSE, loops = FALSE)
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result = Netfrac(reseau,"transfer")
print(result)
write.csv(result, "result3.txt",TRUE)
}
}
for (k in 1:100){
reseau  <- erdos.renyi.game(100, 210, "gnm", directed = FALSE, loops = FALSE)
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result = Netfrac(reseau,"transfer")
print(result)
write.csv(result, "result3.txt",TRUE)
}
}
for (k in 1:100){
reseau  <- erdos.renyi.game(100, 0.04, "gnm", directed = FALSE, loops = FALSE)
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result = Netfrac(reseau,"transfer")
print(result)
write.csv(result, "result3.txt",TRUE)
}
}
for (k in 1:100){
reseau  <- erdos.renyi.game(100, 0.04, "gnm", directed = FALSE, loops = FALSE)
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result = Netfrac(reseau,"transfer")
print(result)
write.csv(result, "result3.txt",TRUE)
}
}
for (k in 1:100){
reseau  <- erdos.renyi.game(100, 0.04, "gnp", directed = FALSE, loops = FALSE)
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result = Netfrac(reseau,"transfer")
print(result)
write.csv(result, "result3.txt",TRUE)
}
}
for (k in 1:100){
reseau  <- erdos.renyi.game(100, 0.04, "gnp", directed = FALSE, loops = FALSE)
for(i in 1:5){
V(reseau)$tax = tax_assign(10*i)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
result = Netfrac(reseau,"transfer")
print(result)
write.csv(result, "result3.txt",TRUE)
}
}
vertex_connectivity()
vertex_connectivity
C_R_igraph_st_vertex_connectivity
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/main.R')
plot(CAT_env)
v1 = V(CAT_env)
tic()
x.col1 <- lapply(v1,function(x) shortest_paths(CAT_env,x,v1[which(x == v1):length(v1)],"all")$vpath)
toc()
x,col1
x.col1
tax_assign <- function (x){
c(rep("A",x),rep("B",100-x))
}
reseau  <- erdos.renyi.game(100, 0.10, "gnp", directed = FALSE, loops = FALSE)
V(reseau)$tax = tax_assign(20)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
v1 = V(reseau)
tic()
x.col1 <- lapply(v1,function(x) shortest_paths(reseau,x,v1[which(x == v1):length(v1)],"all")$vpath)
toc()
x.col1
reseau  <- erdos.renyi.game(100, 0.08, "gnp", directed = FALSE, loops = FALSE)
V(reseau)$tax = tax_assign(20)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
v1 = V(reseau)
tic()
x.col1 <- lapply(v1,function(x) shortest_paths(reseau,x,v1[which(x == v1):length(v1)],"all")$vpath)
toc()
reseau  <- erdos.renyi.game(500, 0.08, "gnp", directed = FALSE, loops = FALSE)
V(reseau)$tax = tax_assign(20)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
v1 = V(reseau)
tic()
x.col1 <- lapply(v1,function(x) shortest_paths(reseau,x,v1[which(x == v1):length(v1)],"all")$vpath)
toc()
x.col1[1]
reseau  <- erdos.renyi.game(100, 0.08, "gnp", directed = FALSE, loops = FALSE)
V(reseau)$tax = tax_assign(20)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau)
plot(reseau, vertex.label=NA, vertex.size =10)
reseau  <- erdos.renyi.game(100, 0.05, "gnp", directed = FALSE, loops = FALSE)
V(reseau)$tax = tax_assign(20)
reseau = set_color(reseau)
V(reseau)$color
E(reseau)$weight = rep(1,length(E(reseau)))
plot(reseau, vertex.label=NA, vertex.size =10)
v1 = V(reseau)[which(V(reseau)=="A")]
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/main.R')
v1 = V(reseau)[which(V(reseau)=="A")]
v1
V(reseau)$tax = tax_assign(20)
v1 = V(reseau)[which(V(reseau)=="A")]
v1
v1 = V(reseau)[which(V(reseau)$tax =="A")]
v1
v2 = V(reseau)[which(V(reseau)$tax =="B")]
v2
col1 = "A"
col2 = "B"
distance = "paths"
dist_par(reseau,col1,col2,"",distance,share_w = 0)
x.col1 = shortest_paths_graph(reseau,v1,v2,v.mix,col1,"paths","single",m_weight,max_weight)
m_weight = mean(E(graph)$weight)
max_weight = sum(E(graph)$weight)
m_weight = mean(E(reseau)$weight)
max_weight = sum(E(reseau)$weight)
x.col1 = shortest_paths_graph(reseau,v1,v2,v.mix,col1,"paths","single",m_weight,max_weight)
x.col1
Netfrac(reseau,"paths")
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/main.R')
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/main.R')
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/dist_par4.R')
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/dist_par4.R')
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/dist_par4.R')
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/dist_par4.R')
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/dist_par4.R')
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/dist_par4.R')
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/dist_par4.R')
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/dist_par4.R')
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/dist_par4.R')
Netfrac(reseau,"transfer")
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/dist_par4.R')
Netfrac(reseau,"transfer")
plot(reseau)
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/dist_par4.R')
dpr_share_paths = dpr_share_paths + 1.0
plot(reseau)
Netfrac(reseau,"transfer")
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/dist_par4.R')
Netfrac(reseau,"transfer")
x.col1
x.col1 <- lapply(v1,function(x) shortest_paths(reseau,x,v1[which(x == v1):length(v1)],"all")$vpath)
x.col1
x.col1 <- lapply(v1,function(x) shortest_paths(reseau,x,v1[(which(x == v1))+1:length(v1)],"all")$vpath)
x.col1 <- lapply(v1,function(x) shortest_paths(reseau,x,v1[which(x == v1):length(v1)],"all")$vpath)
toc()
x.col1 <- lapply(v1,function(x) shortest_paths(reseau,x,v1[which(x == v1):length(v1)],"all")$vpath)
for path in x.col1{print(path[1])}
for (path in x.col1){print(path[1])}
for (path in x.col1){print(path)}
for (path in x.col1){print(path[[1]])}
for (path in x.col1){print(path)}
for (path in x.col1){for (node in path{print(node)}}
for (path in x.col1){for (node in path){print(node)}}
for (path in x.col1){for (nodes in path){for (node in nodes){print(node)}}}
source('C:/Users/bioinfo/Desktop/Tissicca/Test2/R/dist_par4.R')
Netfrac(reseau,"transfer")
