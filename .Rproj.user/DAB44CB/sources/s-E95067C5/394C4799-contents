load_network_pred <-function (filename_or_df, filename_tax_or_df = "", edge_weight = "equal")
{
  if (!is.data.frame(filename_or_df)) {
    dS = read.table(filename_or_df, sep = "\t")
  }
  else {
    dS = filename_or_df
  }
  gS = graph.data.frame(dS, directed = FALSE)
  if (filename_tax_or_df != "") {
    if (!is.data.frame(filename_tax_or_df)) {
      dS2 = read.table(filename_tax_or_df, sep = "\t",
                       row.names = 1)
    }
    else {
      dS2 = filename_tax_or_df
    }
    V(gS)$tax = as.character(dS2[V(gS)$name, 1])
    V(gS)$transfer = as.character(dS2[V(gS)$name, 2])
  }
  if (edge_weight == "equal")
    E(gS)$weight = 1
  if (edge_weight == "" || edge_weight == "proportional") {
    E(gS)$weight = dS[, 3]
  }
  if (edge_weight == "inverse") {
    E(gS)$weight = dS[, 3]
    E(gS)$weight = 1/E(gS)$weight
  }
  return(gS)
}
